service: import-service
frameworkVersion: "3"

plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs20.x
  region: "eu-west-1"
  stage: ${opt:stage, 'dev'}
  environment:
    BUCKET_NAME: game-store-nodejs-aws-assets
    ASSET_FROM_FOLDER: uploaded
    ASSET_TO_FOLDER: parsed
    SQS_URL: "https://sqs.eu-west-1.amazonaws.com/381492192203/catalogItemsQueue"
  httpApi:
    cors: true
    authorizers:
      basicAuthorizer:
        type: request
        resultTtlInSeconds: 60
        identitySource:
          - $request.header.Authorization
        functionArn: arn:aws:lambda:eu-west-1:381492192203:function:authorization-service-dev-basicAuthorizer
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "s3:*"
          Resource: "arn:aws:s3:::game-store-nodejs-aws-assets/*"
        - Effect: "Allow"
          Action:
            - "sqs:SendMessage"
          Resource: "arn:aws:sqs:eu-west-1:381492192203:catalogItemsQueue"

custom:
  webpack:
    webpackConfig: "webpack.config.js"
    includeModules: true

functions:
  importProductsFile:
    handler: handler.importProductsFile
    events:
      - httpApi:
          method: get
          path: /${self:provider.stage}/import
          authorizer:
            name: basicAuthorizer

  importFileParser:
    handler: handler.importFileParser
    events:
      - s3:
          bucket: ${self:provider.environment.BUCKET_NAME}
          event: s3:ObjectCreated:*
          rules:
            - prefix: ${self:provider.environment.ASSET_FROM_FOLDER}
          existing: true
